{
  "{\"sourceRoot\":\"/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box\",\"filename\":\"/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box",
      "filename": "/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box/server.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar app = (0, _express[\"default\"])();\napp.set(\"port\", process.env.PORT || 3000);\napp.use(_express[\"default\"].json());\napp.use(_express[\"default\"][\"static\"](\"public\"));\napp.use((0, _cors[\"default\"])()); // app.get(\"/\", (request, response) => {\n// \tresponse.send(\"Oh hey Pet Box\");\n// });\n\napp.listen(app.get(\"port\"), function () {\n  console.log(\"\".concat(app.locals.title, \" is running on http://localhost:\").concat(app.get(\"port\"), \".\"));\n});\napp.locals.title = \"Pet Box\";\napp.locals.pets = [{\n  id: \"a1\",\n  name: \"Rover\",\n  type: \"dog\"\n}, {\n  id: \"b2\",\n  name: \"Marcus Aurelius\",\n  type: \"parakeet\"\n}, {\n  id: \"c3\",\n  name: \"Craisins\",\n  type: \"cat\"\n}];\napp.get(\"/api/v1/pets\", function (request, response) {\n  var pets = app.locals.pets;\n  response.json({\n    pets: pets\n  });\n});\napp.get(\"/api/v1/pets/:id\", function (request, response) {\n  var id = request.params.id;\n  var pet = app.locals.pets.find(function (pet) {\n    return pet.id === id;\n  });\n\n  if (!pet) {\n    return response.sendStatus(404);\n  }\n\n  response.status(200).json(pet);\n});\napp.post(\"/api/v1/pets\", function (request, response) {\n  var id = Date.now();\n  var pet = request.body;\n\n  for (var _i = 0, _arr = [\"name\", \"type\"]; _i < _arr.length; _i++) {\n    var requiredParameter = _arr[_i];\n\n    if (!pet[requiredParameter]) {\n      return response.status(422).send({\n        error: \"Expected format: { name: <String>, type: <String> }. You're missing a \\\"\".concat(requiredParameter, \"\\\" property.\")\n      });\n    }\n  }\n\n  var name = pet.name,\n      type = pet.type;\n  app.locals.pets.push({\n    id: id,\n    name: name,\n    type: type\n  });\n  response.status(201).json({\n    name: name,\n    type: type,\n    id: id\n  });\n});\napp.patch(\"/api/v1/pets/:id\", function (request, response) {\n  var id = request.params.id;\n  var pet = app.locals.pets.find(function (pet) {\n    return pet.id === id;\n  });\n\n  for (var key in request.body) {\n    if (pet.hasOwnProperty(key)) {\n      pet[key] = request.body[key];\n    }\n  }\n\n  response.status(201).json(pet);\n});\napp[\"delete\"](\"/api/v1/pets/:id\", function (request, response) {\n  var id = request.params.id;\n  var filtered = app.locals.pets.filter(function (pet) {\n    return pet.id !== id;\n  });\n  app.locals.pets = _toConsumableArray(filtered);\n  response.status(201).json(filtered);\n});\napp.get(\"/\", function (request, response) {});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsImV4cHJlc3MiLCJqc29uIiwibGlzdGVuIiwiZ2V0IiwiY29uc29sZSIsImxvZyIsImxvY2FscyIsInRpdGxlIiwicGV0cyIsImlkIiwibmFtZSIsInR5cGUiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJwYXJhbXMiLCJwZXQiLCJmaW5kIiwic2VuZFN0YXR1cyIsInN0YXR1cyIsInBvc3QiLCJEYXRlIiwibm93IiwiYm9keSIsInJlcXVpcmVkUGFyYW1ldGVyIiwic2VuZCIsImVycm9yIiwicHVzaCIsInBhdGNoIiwia2V5IiwiaGFzT3duUHJvcGVydHkiLCJmaWx0ZXJlZCIsImZpbHRlciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQUNBLElBQU1BLEdBQUcsR0FBRywwQkFBWjtBQUVBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxNQUFSLEVBQWdCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFwQztBQUVBSixHQUFHLENBQUNLLEdBQUosQ0FBUUMsb0JBQVFDLElBQVIsRUFBUjtBQUNBUCxHQUFHLENBQUNLLEdBQUosQ0FBUUMsOEJBQWUsUUFBZixDQUFSO0FBQ0FOLEdBQUcsQ0FBQ0ssR0FBSixDQUFRLHVCQUFSLEUsQ0FFQTtBQUNBO0FBQ0E7O0FBRUFMLEdBQUcsQ0FBQ1EsTUFBSixDQUFXUixHQUFHLENBQUNTLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBTTtBQUNqQ0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLFdBQ0lYLEdBQUcsQ0FBQ1ksTUFBSixDQUFXQyxLQURmLDZDQUN1RGIsR0FBRyxDQUFDUyxHQUFKLENBQVEsTUFBUixDQUR2RDtBQUdBLENBSkQ7QUFNQVQsR0FBRyxDQUFDWSxNQUFKLENBQVdDLEtBQVgsR0FBbUIsU0FBbkI7QUFDQWIsR0FBRyxDQUFDWSxNQUFKLENB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c291cmNlUm9vdCI6Ii9Vc2Vycy9lbGxpb3RtYWNraW5ub24vRG9jdW1lbnRzL1R1cmluZy9tb2Q0L3ByYWN0aWNlL3BldC1ib3gvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSBcImV4cHJlc3NcIjtcbmltcG9ydCBjb3JzIGZyb20gXCJjb3JzXCI7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5cbmFwcC5zZXQoXCJwb3J0XCIsIHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCk7XG5cbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xuYXBwLnVzZShleHByZXNzLnN0YXRpYyhcInB1YmxpY1wiKSk7XG5hcHAudXNlKGNvcnMoKSk7XG5cbi8vIGFwcC5nZXQoXCIvXCIsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuLy8gXHRyZXNwb25zZS5zZW5kKFwiT2ggaGV5IFBldCBCb3hcIik7XG4vLyB9KTtcblxuYXBwLmxpc3RlbihhcHAuZ2V0KFwicG9ydFwiKSwgKCkgPT4ge1xuXHRjb25zb2xlLmxvZyhcblx0XHRgJHthcHAubG9jYWxzLnRpdGxlfSBpcyBydW5uaW5nIG9uIGh0dHA6Ly9sb2NhbGhvc3Q6JHthcHAuZ2V0KFwicG9ydFwiKX0uYFxuXHQpO1xufSk7XG5cbmFwcC5sb2NhbHMudGl0bGUgPSBcIlBldCBCb3hcIjtcbmFwcC5sb2NhbHMucGV0cyA9IFtcblx0eyBpZDogXCJhMVwiLCBuYW1lOiBcIlJvdmVyXCIsIHR5cGU6IFwiZG9nXCIgfSxcblx0eyBpZDogXCJiMlwiLCBuYW1lOiBcIk1hcmN1cyBBdXJlbGl1c1wiLCB0eXBlOiBcInBhcmFrZWV0XCIgfSxcblx0eyBpZDogXCJjM1wiLCBuYW1lOiBcIkNyYWlzaW5zXCIsIHR5cGU6IFwiY2F0XCIgfSxcbl07XG5cbmFwcC5nZXQoXCIvYXBpL3YxL3BldHNcIiwgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG5cdGNvbnN0IHBldHMgPSBhcHAubG9jYWxzLnBldHM7XG5cblx0cmVzcG9uc2UuanNvbih7IHBldHMgfSk7XG59KTtcblxuYXBwLmdldChcIi9hcGkvdjEvcGV0cy86aWRcIiwgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG5cdGNvbnN0IHsgaWQgfSA9IHJlcXVlc3QucGFyYW1zO1xuXHRjb25zdCBwZXQgPSBhcHAubG9jYWxzLnBldHMuZmluZCgocGV0KSA9PiBwZXQuaWQgPT09IGlkKTtcblx0aWYgKCFwZXQpIHtcblx0XHRyZXR1cm4gcmVzcG9uc2Uuc2VuZFN0YXR1cyg0MDQpO1xuXHR9XG5cblx0cmVzcG9uc2Uuc3RhdHVzKDIwMCkuanNvbihwZXQpO1xufSk7XG5cbmFwcC5wb3N0KFwiL2FwaS92MS9wZXRzXCIsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xuXHRjb25zdCBpZCA9IERhdGUubm93KCk7XG5cdGNvbnN0IHBldCA9IHJlcXVlc3QuYm9keTtcblxuXHRmb3IgKGxldCByZXF1aXJlZFBhcmFtZXRlciBvZiBbXCJuYW1lXCIsIFwidHlwZVwiXSkge1xuXHRcdGlmICghcGV0W3JlcXVpcmVkUGFyYW1ldGVyXSkge1xuXHRcdFx0cmV0dXJuIHJlc3BvbnNlLnN0YXR1cyg0MjIpLnNlbmQoe1xuXHRcdFx0XHRlcnJvcjogYEV4cGVjdGVkIGZvcm1hdDogeyBuYW1lOiA8U3RyaW5nPiwgdHlwZTogPFN0cmluZz4gfS4gWW91J3JlIG1pc3NpbmcgYSBcIiR7cmVxdWlyZWRQYXJhbWV0ZXJ9XCIgcHJvcGVydHkuYCxcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXG5cdGNvbnN0IHsgbmFtZSwgdHlwZSB9ID0gcGV0O1xuXHRhcHAubG9jYWxzLnBldHMucHVzaCh7IGlkLCBuYW1lLCB0eXBlIH0pO1xuXHRyZXNwb25zZS5zdGF0dXMoMjAxKS5qc29uKHsgbmFtZSwgdHlwZSwgaWQgfSk7XG59KTtcblxuYXBwLnBhdGNoKFwiL2FwaS92MS9wZXRzLzppZFwiLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcblx0Y29uc3QgeyBpZCB9ID0gcmVxdWVzdC5wYXJhbXM7XG5cblx0bGV0IHBldCA9IGFwcC5sb2NhbHMucGV0cy5maW5kKChwZXQpID0+IHBldC5pZCA9PT0gaWQpO1xuXG5cdGZvciAoY29uc3Qga2V5IGluIHJlcXVlc3QuYm9keSkge1xuXHRcdGlmIChwZXQuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuXHRcdFx0cGV0W2tleV0gPSByZXF1ZXN0LmJvZHlba2V5XTtcblx0XHR9XG5cdH1cblxuXHRyZXNwb25zZS5zdGF0dXMoMjAxKS5qc29uKHBldCk7XG59KTtcblxuYXBwLmRlbGV0ZShcIi9hcGkvdjEvcGV0cy86aWRcIiwgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XG5cdGNvbnN0IHsgaWQgfSA9IHJlcXVlc3QucGFyYW1zO1xuXG5cdGxldCBmaWx0ZXJlZCA9IGFwcC5sb2NhbHMucGV0cy5maWx0ZXIoKHBldCkgPT4gcGV0LmlkICE9PSBpZCk7XG5cblx0YXBwLmxvY2Fscy5wZXRzID0gWy4uLmZpbHRlcmVkXTtcblxuXHRyZXNwb25zZS5zdGF0dXMoMjAxKS5qc29uKGZpbHRlcmVkKTtcbn0pO1xuXG5hcHAuZ2V0KFwiL1wiLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHt9KTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "set",
        "process",
        "env",
        "PORT",
        "use",
        "express",
        "json",
        "listen",
        "get",
        "console",
        "log",
        "locals",
        "title",
        "pets",
        "id",
        "name",
        "type",
        "request",
        "response",
        "params",
        "pet",
        "find",
        "sendStatus",
        "status",
        "post",
        "Date",
        "now",
        "body",
        "requiredParameter",
        "send",
        "error",
        "push",
        "patch",
        "key",
        "hasOwnProperty",
        "filtered",
        "filter"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/elliotmackinnon/Documents/Turing/mod4/practice/pet-box/",
      "sourcesContent": [
        "import express from \"express\";\nimport cors from \"cors\";\nconst app = express();\n\napp.set(\"port\", process.env.PORT || 3000);\n\napp.use(express.json());\napp.use(express.static(\"public\"));\napp.use(cors());\n\n// app.get(\"/\", (request, response) => {\n// \tresponse.send(\"Oh hey Pet Box\");\n// });\n\napp.listen(app.get(\"port\"), () => {\n\tconsole.log(\n\t\t`${app.locals.title} is running on http://localhost:${app.get(\"port\")}.`\n\t);\n});\n\napp.locals.title = \"Pet Box\";\napp.locals.pets = [\n\t{ id: \"a1\", name: \"Rover\", type: \"dog\" },\n\t{ id: \"b2\", name: \"Marcus Aurelius\", type: \"parakeet\" },\n\t{ id: \"c3\", name: \"Craisins\", type: \"cat\" },\n];\n\napp.get(\"/api/v1/pets\", (request, response) => {\n\tconst pets = app.locals.pets;\n\n\tresponse.json({ pets });\n});\n\napp.get(\"/api/v1/pets/:id\", (request, response) => {\n\tconst { id } = request.params;\n\tconst pet = app.locals.pets.find((pet) => pet.id === id);\n\tif (!pet) {\n\t\treturn response.sendStatus(404);\n\t}\n\n\tresponse.status(200).json(pet);\n});\n\napp.post(\"/api/v1/pets\", (request, response) => {\n\tconst id = Date.now();\n\tconst pet = request.body;\n\n\tfor (let requiredParameter of [\"name\", \"type\"]) {\n\t\tif (!pet[requiredParameter]) {\n\t\t\treturn response.status(422).send({\n\t\t\t\terror: `Expected format: { name: <String>, type: <String> }. You're missing a \"${requiredParameter}\" property.`,\n\t\t\t});\n\t\t}\n\t}\n\n\tconst { name, type } = pet;\n\tapp.locals.pets.push({ id, name, type });\n\tresponse.status(201).json({ name, type, id });\n});\n\napp.patch(\"/api/v1/pets/:id\", (request, response) => {\n\tconst { id } = request.params;\n\n\tlet pet = app.locals.pets.find((pet) => pet.id === id);\n\n\tfor (const key in request.body) {\n\t\tif (pet.hasOwnProperty(key)) {\n\t\t\tpet[key] = request.body[key];\n\t\t}\n\t}\n\n\tresponse.status(201).json(pet);\n});\n\napp.delete(\"/api/v1/pets/:id\", (request, response) => {\n\tconst { id } = request.params;\n\n\tlet filtered = app.locals.pets.filter((pet) => pet.id !== id);\n\n\tapp.locals.pets = [...filtered];\n\n\tresponse.status(201).json(filtered);\n});\n\napp.get(\"/\", (request, response) => {});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1592951786354
  }
}